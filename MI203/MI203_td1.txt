{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"MI203_td1","provenance":[],"collapsed_sections":[]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"qXTXvYpE1CPB"},"source":["# TD : Apprentissage automatique - Approche bayésienne et k-NN\n","\n","\n","Répondez aux questions dans le document et copiez les lignes de code qui ont produit les résultats aux endroits indiqués.\n","\n","Le TD comprend 2 parties:\n","* Une comparaison des approches bayésienne et plus proches voisins pour un problème de classification binaire. Les algorithmes seront codés intégralement en python.\n","* Une prise en main sur un autre problème de la bibliothèque  [scikit-learn](http://scikit-learn.org/stable/modules/classes.html) qui implémente les mêmes algorithmes.\n"]},{"cell_type":"markdown","metadata":{"id":"49SXeP9y5Bmi"},"source":["______\n","\n","# Introduction: Utilisation de Colab\n","______\n","\n","Dans ce TD, on utilise les ressources proposées par Colab. Les données seront stockées sur le Google Drive associé à votre compte Gmail.\n","\n","Pour accéder au données depuis Colab, il faut \"monter le Gdrive\" depuis une session Colab.\n","\n","Exécutez le cellule suivante pour le faire. Il peut vous être demandé de saisir une clé d'authentification générée à partir du lien affiché. (Ctrl+Enter ou clic sur la flèche)"]},{"cell_type":"code","metadata":{"id":"mrs_sTGV15Xa","colab":{"base_uri":"https://localhost:8080/"},"outputId":"25a1682d-570c-45dc-fe1f-58ed7e8c1f08","executionInfo":{"status":"ok","timestamp":1643363437593,"user_tz":-60,"elapsed":18807,"user":{"displayName":"Bastien HUBERT","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04298671668338335371"}}},"source":["from google.colab import drive\n","drive.mount('/content/gdrive')"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}]},{"cell_type":"markdown","metadata":{"id":"2l_9h-Hs7DQ5"},"source":["Il faut ensuite positionner des variables d'environnement pour indiquer à Colab où se trouvent les données (fichiers python et données d'apprentissage).\n","\n","Exécutez la cellule suivante pour le faire, et modifiez la variable 'TD_DIR' à l'endroit où vous avez sauvegardé le TD1. "]},{"cell_type":"code","source":["!ls gdrive/MyDrive/MI203"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xkylPrQ6GW37","executionInfo":{"status":"ok","timestamp":1643967017985,"user_tz":-60,"elapsed":253,"user":{"displayName":"Bastien HUBERT","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04298671668338335371"}},"outputId":"413549b4-3e48-475a-e678-c0b31a332f6c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["ls: cannot access 'gdrive/MyDrive/MI203': No such file or directory\n"]}]},{"cell_type":"code","metadata":{"id":"JJSr-2A-2YV4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1643363577549,"user_tz":-60,"elapsed":204,"user":{"displayName":"Bastien HUBERT","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04298671668338335371"}},"outputId":"6a6ea7c8-e680-417d-f658-52eff529c829"},"source":["import sys\n","import os\n","\n","# Modifier la variable du TD en fonction de l'endroit où les données sont stockées\n","TD_DIR = 'gdrive/My Drive/MI206'\n","sys.path.append(TD_DIR)\n","print(os.path.exists(TD_DIR))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["True\n"]}]},{"cell_type":"markdown","metadata":{"id":"nRprSmVE1CPF"},"source":["______\n","\n","# Partie 1: Apprentissage automatique en Python\n","______\n","\n","On se propose dans cette première partie de construire une démarche d'apprentissage sur un problème simple, et de programmer les deux algorithmes vus dans le cours (bayésien naĩf et plus proches voisins).\n","\n","Chaque jeu de données est constitué de quatre ensembles :\n","* Un ensemble de données test utilisées pour l'apprentissage : trainX\n","* Un ensemble de classes associées aux données d'apprentissage : trainY\n","* Un ensemble de données à tester : testX\n","* Un ensemble de classes associées aux données de test : testY\n","\n","Les données de test ne doivent pas être utilisées pour l'apprentissage proprement dit, seulement pour son évaluation.\n","\n","Si besoin (validation croisée), les jeux d'apprentissage peuvent être répartis en train + validation.\n","\n","Remarque: Pour visualiser dans le notebook, appliquer l'instruction:\n",">```python\n","plt.show() ```\n","\n","après chaque fonction de visualisation.\n"]},{"cell_type":"markdown","metadata":{"id":"QFiivfGl1CPH"},"source":["## Activité 1.1 : Bayésien naïf.\n","\n","On se propose de réaliser une classification binaire d'un ensemble de données en utilisant une approche de type \"bayésien naïf\".\n","\n","Le problème est une classification binaire pour détecter des billets de banque frauduleux. Les données source d'origine sont accessible ici https://archive.ics.uci.edu/ml/datasets/banknote+authentication, mais sont aussi présentes sur votre machine. \n","\n","L'objectif est de dérouler les différentes étapes d'une démarche d'apprentissage automatique:\n","1. Constitution de la base d'apprentissage\n","2. Visualisation des données\n","3. Choix de l'approche\n","4. Optimisation\n","5. Evaluation\n","\n","### Base d'apprentissage"]},{"cell_type":"markdown","metadata":{"id":"WOJ2R0Hw1CPL"},"source":["\n","<div class=\"alert alert-block alert-info\">\n","\n","Les données source ont été placées dans le répertoire du TP (fichier 'data_banknote_authentication.txt').\n","\n","Exécuter le code ci-dessous qui les charge, et qui les répartit en ensemble d'apprentissage et de test (fonction 'train_test_split')\n","\n","Montrer les tailles des données (nombre de caractéristiques, nombre de données). \n","\n","</div>\n"]},{"cell_type":"code","metadata":{"id":"w5TsMi6l1CPM","colab":{"base_uri":"https://localhost:8080/"},"outputId":"538fe789-4e04-49ef-ea41-c5194534c192","executionInfo":{"status":"ok","timestamp":1643366335326,"user_tz":-60,"elapsed":8,"user":{"displayName":"Bastien HUBERT","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04298671668338335371"}}},"source":["# Librairies scientifique et visualisation utiles standard\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import random\n","\n","# Pour séparer les données en apprentissage et test\n","from sklearn.model_selection import train_test_split\n","\n","# Pour visualiser  les données\n","def show_data_2D(X,Y):\n","    np.unique(Y)\n","    fig, ax = plt.subplots(figsize=(8, 6))\n","    for id in np.unique(Y):\n","        idpositive=np.nonzero(Y == id)[0]\n","        ax.scatter(X[idpositive,0], X[idpositive,1], s=50)\n","\n","# Chargement des données et constitution de la base d'apprentissage\n","X = np.loadtxt(os.path.join(TD_DIR,'data_banknote_authentication.txt'), delimiter=',')\n","y = X[:,-1]\n","X = X[:,:-1]\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y,\n","                                                    random_state=42,\n","                                                    stratify=y,\n","                                                    test_size=0.8)\n","\n","# Nombre et dimension des données\n","shape = np.shape(X_train)\n","print(\"Les données sont de dimension\", shape[1])\n","print(\"Le nombre de données d'apprentissage est\", shape[0])\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Les données sont de dimension 4\n","Le nombre de données d'apprentissage est 274\n"]}]},{"cell_type":"markdown","metadata":{"id":"CfRRqXqM1CPV"},"source":["### Visualisation des données"]},{"cell_type":"markdown","metadata":{"id":"AHvtgNQN1CPY"},"source":["\n","\n","<div class=\"alert alert-block alert-info\">\n","\n","Faire des sorties visuelles des distributions de données. Vous pourrez utiliser les fonctions de visualisation \"show_data_2D\" pour mettre en évidence les corrélations, et [plt.hist](https://matplotlib.org/devdocs/api/_as_gen/matplotlib.pyplot.hist.html) pour visualiser des histogrammes pour chaque classe.\n","\n","</div>\n"]},{"cell_type":"code","metadata":{"id":"PDy0FWkL1CPa","colab":{"base_uri":"https://localhost:8080/","height":622},"outputId":"cc7ef838-5cfc-4160-be08-488e3c90dd2e","executionInfo":{"status":"ok","timestamp":1643366332918,"user_tz":-60,"elapsed":527,"user":{"displayName":"Bastien HUBERT","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04298671668338335371"}}},"source":["# Dimensions à étudier (à répéter pour d'autres dimensions)\n","feat1 = 0\n","feat2 = 3\n","\n","# Distributions 2D\n","show_data_2D(X_train[:,[feat1, feat2]], y_train)\n","plt.show()\n","\n","X0 = X_train[y_train == 0,:]\n","X1 = X_train[y_train == 1,:]\n","\n","# Visualise les distributions pour un attribut\n","a1 = X0[:,feat1]\n","b1 = X1[:,feat1]\n","\n","#Visualise les histogrammes\n","plt.hist(a1, alpha=0.5, label=['class 0'])\n","plt.hist(b1, alpha=0.5, label=['class 1'])\n","plt.legend()\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 576x432 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"pdN-nX7l1CPf"},"source":["### Choix de l'approche"]},{"cell_type":"markdown","metadata":{"id":"xLVd5nah1CPi"},"source":["\n","\n","<div class=\"alert alert-block alert-info\">\n","\n","Le principe du bayésien naïf est d'estimer la loi conditionnelle $P[x_i | y]$ pour les différentes hypothèses $y\\in\\{0,1\\}$ et caractéristiques $x_i$.\n","<br><br>\n","A partir de la répartition des données pour chaque caractéristique, le principe du choix de l'approche est de sélectionner un bon modèle de cette distribution (binomiale, multinomiale, gaussienne, histogram, mélange de gaussienne...)?\n","<br><br>\n","Vous pouvez regarder la bibliothèque [scipy.stats](https://docs.scipy.org/doc/scipy/reference/stats.html) qui définit les familles courantes de distributions statistiques.\n","<br><br>\n","Essayez d'estimer quelques lois paramétriques pertinentes (méthode 'fit' des classes de scipy.stats) en les superposant aux histogrammes des données. \n","\n","</div>\n"]},{"cell_type":"code","metadata":{"scrolled":false,"id":"Glxf8LYx1CPk","colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"11b1c552-c971-4a29-f744-9d4db139c9fa","executionInfo":{"status":"ok","timestamp":1643366330092,"user_tz":-60,"elapsed":2498,"user":{"displayName":"Bastien HUBERT","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04298671668338335371"}}},"source":["# Choix de la distribution\n","from scipy.stats import laplace, expon, norm, gamma, beta, cauchy, logistic\n","\n","# beta ne fonctionne pas ici car on a besoin d'avoir a>0 et b>0\n","distributions = [laplace, expon, norm, gamma, cauchy, logistic]\n","\n","# Changer de distribution\n","for distrib in distributions:\n","\n","  # Choix de la caractéristique\n","  feat1 = 1\n","  a1 = X0[:,feat1]\n","  b1 = X1[:,feat1]\n","\n","  # Visualise les distributions pour une caractéristique\n","  plt.clf()\n","\n","  data = a1\n","  param = distrib.fit(data)\n","\n","  # Plot the histogram.\n","  plt.hist(data, bins=25, density=True, alpha=0.6, color='b')\n","\n","  # Plot the PDF.\n","  xmin, xmax = plt.xlim()\n","  x = np.linspace(xmin, xmax, 100)\n","  p = distrib.pdf(x, *param)\n","  plt.plot(x, p, 'b', linewidth=2)\n","\n","  data = b1\n","  param = distrib.fit(data)\n","\n","  # Plot the histogram.\n","  plt.hist(data, bins=25, density=True, alpha=0.6, color='g')\n","\n","  # Plot the PDF.\n","  xmin, xmax = plt.xlim()\n","  x = np.linspace(xmin, xmax, 100)\n","  p = distrib.pdf(x, *param)\n","  plt.plot(x, p, 'g', linewidth=2)\n","\n","  title = \"Fit results for %s\" % distrib.name\n","  plt.title(title)\n","\n","  plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"sRO9cUOm1CPq"},"source":["<div class=\"alert alert-block alert-success\">\n","QUESTION: Quelle est la famille de distributions la plus simple pour décrire les données?\n","</div>"]},{"cell_type":"markdown","metadata":{"id":"2UhWErS71CPt"},"source":["**Réponse**\n","\n","C'est la loi normale"]},{"cell_type":"markdown","metadata":{"id":"T5CbT7WJ1CPv"},"source":["### Optimisation du modèle"]},{"cell_type":"markdown","metadata":{"id":"D8YhAwb01CPv"},"source":["<div class=\"alert alert-block alert-info\">\n","Ecrire une fonction d'estimation qui renvoie le modèle de distribution ou ses paramètres pour l'ensemble des lois conditionnelles. Ce sera le résultat de votre apprentissage! Appliquez-la sur les distributions de chacune des deux classes.\n","</div>"]},{"cell_type":"code","metadata":{"scrolled":false,"id":"QMY6nMPJ1CPy","colab":{"base_uri":"https://localhost:8080/"},"outputId":"b241efed-413e-484c-f7ef-7c5aca34a5e4","executionInfo":{"status":"ok","timestamp":1643366473406,"user_tz":-60,"elapsed":213,"user":{"displayName":"Bastien HUBERT","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04298671668338335371"}}},"source":["def build_model(data, distrib):\n","    params = []\n","    for i in range(data.shape[1]):\n","      params.append(distrib.fit(data[:,i]))\n","    return params\n","\n","distrib = laplace\n","\n","param0 = build_model(X0, distrib)\n","param1 = build_model(X1, distrib)\n","\n","print(param0)\n","print(param1)\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[(2.699553398400396, 1.5517413904866721), (5.292813593675239, 4.054387829185126), (0.7571754818615405, 2.4793210728353765), (-0.4430274596814971, 1.3693682299656889)]\n","[(-1.8287513602764052, 1.4193157839147368), (0.07069407000304351, 4.44508365908508), (0.5872380852896271, 4.150300284250213), (-0.4407076185818244, 1.5085300204523377)]\n"]}]},{"cell_type":"markdown","metadata":{"id":"FkNSptq91CP6"},"source":["<div class=\"alert alert-block alert-info\">\n","Ecrire une fonction 'compute_log_likelihood' qui prédit la classe à partir des données et des modèles de distributions en utilisant une approche bayésienne naïve:\n","$$\\log P[y|\\mathbf{x}] \\propto \\sum_{i=1}^N \\log P[x_i|y] + \\log P[y]$$\n","pour chacune des classes $y$ et une donnée à prédire $\\mathbf{x}$.\n","</div>"]},{"cell_type":"code","metadata":{"scrolled":false,"id":"cxkCeXgF1CP9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1643369150569,"user_tz":-60,"elapsed":339,"user":{"displayName":"Bastien HUBERT","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04298671668338335371"}},"outputId":"353f50e7-a5bc-4632-f16f-21dd36c6bb07"},"source":["def compute_log_likelihood(data, distrib, params):\n","    llk = np.zeros((1, data.shape[0]))\n","    for i in range(data.shape[1]):\n","      llk = llk #+ distrib.logpdf(data[i,data.shape[0]], *params[i])\n","    return llk\n","\n","distrib = norm\n","\n","param0 = build_model(X0, distrib)\n","llk0 = compute_log_likelihood(X0, distrib, param0)\n","\n","print(llk0)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n","  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n","  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n","  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n","  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n","  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n","  0. 0. 0. 0. 0. 0. 0. 0.]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"B4bYeL9d1CQB"},"source":["### Evaluation"]},{"cell_type":"markdown","metadata":{"id":"f_o4lhxl1CQC"},"source":["<div class=\"alert alert-block alert-info\">\n","Tester les performances du classifieur sur les données d'apprentissage et de test. Pour cela, écrivez une fonction de prédiction utilisant le modèle, appliquez-le sur les données de test et comparez aux vraies valeurs.\n","</div>"]},{"cell_type":"code","metadata":{"scrolled":false,"id":"waGxeCN71CQE","outputId":"b0957e36-ef05-4b69-b2e6-49ff473d5555","colab":{"base_uri":"https://localhost:8080/","height":356},"executionInfo":{"status":"error","timestamp":1643368604265,"user_tz":-60,"elapsed":214,"user":{"displayName":"Bastien HUBERT","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04298671668338335371"}}},"source":["def predic_bayesien_naif(data, distrib, param0, param1):       \n","    # METTRE VOTRE CODE ICI\n","    #\n","    #\n","    #\n","    #\n","    return y_predic\n","\n","\n","y_train_predic = predic_bayesien_naif(X_train, distrib, param0, param1)\n","y_test_predic = predic_bayesien_naif(X_test, distrib, param0, param1)\n","\n","\n","nerr_train = (y_train_predic != y_train).sum()\n","nerr_test = (y_test_predic != y_test).sum()\n","\n","print(\"Taux d'erreur sur données de train = {:.1f}%\".format(100*nerr_train/X_train.shape[0]))\n","print(\"Taux d'erreur sur données de test = {:.1f}%\".format(100*nerr_test/X_test.shape[0]))\n"],"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-74-7d35c36d37aa>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 10\u001b[0;31m \u001b[0my_train_predic\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpredic_bayesien_naif\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdistrib\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparam0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparam1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     11\u001b[0m \u001b[0my_test_predic\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpredic_bayesien_naif\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdistrib\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparam0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparam1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-74-7d35c36d37aa>\u001b[0m in \u001b[0;36mpredic_bayesien_naif\u001b[0;34m(data, distrib, param0, param1)\u001b[0m\n\u001b[1;32m      5\u001b[0m     \u001b[0;31m#\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m     \u001b[0;31m#\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0my_predic\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'y_predic' is not defined"]}]},{"cell_type":"markdown","metadata":{"id":"fKfBe3FL1CQM"},"source":["<div class=\"alert alert-block alert-success\">\n","QUESTION: Expliquez les différences des valeurs de performance entre ensembles d'apprentissage et de test.\n","</div>"]},{"cell_type":"markdown","metadata":{"id":"bEx_0AkT1CQM"},"source":["**Réponse**\n","\n","Le modèle est appris sur des données en petit nombre, et est donc imprécis."]},{"cell_type":"markdown","metadata":{"id":"tjEb4uGW1CQO"},"source":["## Activité 1.2: Plus proches voisins\n","On va reproduire la séquence d'activité précédente en développant une approche de type 'plus proches voisins', et la valider sur le même jeu de données."]},{"cell_type":"markdown","metadata":{"id":"U2XH64-b1CQQ"},"source":["### Choix du modèle"]},{"cell_type":"markdown","metadata":{"id":"27bkejTm1CQR"},"source":["\n","<div class=\"alert alert-block alert-info\">\n","Les principaux paramètres du modèle sont le type de distance ou de mesure de similarité, et le nombre de voisins à utiliser pour prendre une décision.\n","</div>"]},{"cell_type":"code","metadata":{"id":"HvxAcXeR1CQT"},"source":["# Choix de la distance de similarité\n","dist_name = 'euclidean'\n","\n","# Choix du nombre de voisins\n","k = 5"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"S8kdXwfO1CQi"},"source":["### Optimisation"]},{"cell_type":"markdown","metadata":{"id":"Xu0DQO6L1CQk"},"source":["\n","<div class=\"alert alert-block alert-info\">\n","L'apprentissage d'une approche 'plus proches voisins' consiste simplement à collecter les exemples d'apprentissage et leurs classes.\n","</div>"]},{"cell_type":"code","metadata":{"id":"kk9Pzq9k1CQl"},"source":["# Apprentissage\n","Bdd_samples = X_train\n","Bdd_classes = y_train"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"QUlQHT2w1CQr"},"source":["### Evaluation"]},{"cell_type":"markdown","metadata":{"id":"Du_w5XZb1CQt"},"source":["\n","<div class=\"alert alert-block alert-info\">\n","L'évaluation consiste à vérifier que la fonction de prédiction appliquée sur le jeu de test produit des classes identiques à la vérité terrain. \n","<br><br>\n","Ecrivez le corps de la fonction de prédiction 'predic_kNN' prenant en entrée l'ensemble de test, et les paramètres de l'algorithme du plus proche voisin. \n","<br><br>\n","Vous pouvez utiliser les fonctions de calcul de matrices de similarité <a href=https://docs.scipy.org/doc/scipy/reference/generated/scipy.spatial.distance.cdist.html>cdist</a>, les fonctions de tri de numpy <a href=https://docs.scipy.org/doc/numpy/reference/generated/numpy.argsort.html>argsort</a> et les fonctions de statistiques sur des collections implémentées directement en Python dans la classe <a href=https://docs.python.org/3/library/collections.html#collections.Counter>Counter</a>. Avec ces fonctions, l'algorithme peut tenir en moins de 10 lignes.\n","\n","</div>"]},{"cell_type":"code","metadata":{"scrolled":false,"id":"JuF6YNjW1CQu","outputId":"5dd3e6c7-3e01-4852-e130-e8bc7f483096"},"source":["\n","### Calcul de la distance\n","from scipy.spatial import distance\n","from collections import Counter\n","\n","def predic_kNN(X_test, samples, classes, dist_name, k):\n","    voisins = distance.cdist(X_test, samples, metric=dist_name)\n","    voisins_proches = np.argsort(voisins)i\n","    yNN_predic = classes[voisins_proches[:,:k]]\n","    y_predic = []\n","    for i in range(yNN_predic.shape[0]):\n","      y_predic.append(Counter(yNN_predic[i,:]))\n","    return y_predic\n","\n","y_predic = predic_kNN(X_test, Bdd_samples, Bdd_classes, dist_name, k)\n","nerr = (y_predic != y_test).sum()\n","\n","print(\"Taux d'erreur de test {:.1f}%\".format(100*nerr/X_test.shape[0]))"],"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'y_predic' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-10-d48ba92b529d>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     12\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0my_predic\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 14\u001b[0;31m \u001b[0my_predic\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpredic_kNN\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mBdd_samples\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mBdd_classes\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdist_name\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     15\u001b[0m \u001b[0mnerr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0my_predic\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0my_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     16\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-10-d48ba92b529d>\u001b[0m in \u001b[0;36mpredic_kNN\u001b[0;34m(X_test, samples, classes, dist_name, k)\u001b[0m\n\u001b[1;32m     10\u001b[0m     \u001b[0;31m#\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m     \u001b[0;31m#\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 12\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0my_predic\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     13\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     14\u001b[0m \u001b[0my_predic\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpredic_kNN\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mBdd_samples\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mBdd_classes\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdist_name\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'y_predic' is not defined"]}]},{"cell_type":"markdown","metadata":{"id":"BDt3OeJF1CQ5"},"source":["<div class=\"alert alert-block alert-success\">\n","QUESTION: quelles sont les différences principales par rapport au modèle précédent (Bayésien naïf)?\n","</div>"]},{"cell_type":"markdown","metadata":{"id":"wdkbnXhn1CQ7"},"source":["**Réponse**\n","\n","Phase d'apprentissage réduite, temps de calcul plus long, performances meilleures (prise en compte des corrélations entre caractéristiques dans la distance). "]},{"cell_type":"markdown","metadata":{"collapsed":true,"id":"EWJMzwpl1CQ8"},"source":["___\n","# Partie 2 : Utilisation de scikit-learn\n","___\n","\n","\n","On se propose dans cette partie d'utiliser la librarie [scikit-learn](http://scikit-learn.org/stable/modules/classes.html) qui contient un rand nombre d'algorithmes d'apprentissage et une interface facile d'utilisation, divisée en deux types de fonctionnalités: 'fit' et 'predict'.\n","\n","Le nouveau problème d'apprentissage est une classification binaire de textes en provenance de [newsgroups](https://en.wikipedia.org/wiki/Usenet_newsgroup), c'est-à-dire des forums de discussion sur une certaine thématique. L'objectif de la classification est de prédire le groupe où le document a été posté uniquement à partir du texte. \n","\n","Une première étape de mise en forme des données sous forme vectorielle a été réalisée et utilise une technique de \"sac de mots\" ([\"bag of words\"](https://en.wikipedia.org/wiki/Bag-of-words_model) en anglais). Les données sont de grande taille, mais très creuses (beaucoup de valeurs nulles par échantillon)."]},{"cell_type":"markdown","metadata":{"id":"7wpxGM3O1CQ9"},"source":["<div class=\"alert alert-block alert-info\">\n","\n","Chargez les données visualisez quelques exemples. Calculez le nombre moyen de valeurs non nulles par échantillon.\n","\n","</div>"]},{"cell_type":"code","metadata":{"scrolled":true,"id":"Sca_lGy01CQ_","colab":{"base_uri":"https://localhost:8080/"},"outputId":"9bc832d6-fc82-410b-ba24-1f2508fb9785"},"source":["## Lecture des données\n","#class0 = 3 #'comp.sys.ibm.pc.hardware',\n","#class1 = 4 #'comp.sys.mac.hardware'\n","\n","class0 = 13 # 'sci.med'\n","class1 = 14 # 'sci.space'\n","\n","\n","npzfile = np.load(os.path.join(TD_DIR,'2newsgroup_{:d}_{:d}.npz').format(class0,class1),allow_pickle=True)\n","X = npzfile['arr_0'].tolist().todense()\n","\n","y = X[:,-1].getA1()\n","X = X[:,:-1]\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y,\n","                                                    random_state=42,\n","                                                    stratify=y,\n","                                                    test_size=0.3)\n","\n","print(\"Les données sont de dimension {:d}\".format(X_train.shape[1]))\n","print(\"Le nombre de données d'apprentissage est {:d}\".format(y_train.shape[0]))\n","\n","# MODIFIER LE CODE ICI\n","non_nul_moyen = 78789797\n","print(\"Le nombre moyen de valeurs non nulles par échantillon est {:.1f}\".format(non_nul_moyen))\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Les données sont de dimension 24412\n","Le nombre de données d'apprentissage est 1383\n","Le nombre moyen de valeurs non nulles par échantillon est 78789797.0\n"]}]},{"cell_type":"markdown","metadata":{"id":"nc-pYbr11CRG"},"source":["## Activité 2.1: bayésien naïf"]},{"cell_type":"markdown","metadata":{"id":"yfFBwSsQ1CRJ"},"source":["<div class=\"alert alert-block alert-info\">\n","\n","La bibliothèque propose une version de l'algorithme [bayésien naif](http://scikit-learn.org/stable/modules/classes.html#module-sklearn.naive_bayes) avec plusieurs types de modèles de distributions de probabilités. Quel est le modèle plus adapté au problème parmi les trois proposés?\n","\n","<br><br>\n","\n","Ecrivez ensuite la démarche générique d'apprentissage à partir de la bibliothèque scikit-learn.\n","</div>"]},{"cell_type":"code","metadata":{"scrolled":false,"id":"FGsqfqpE1CRK","colab":{"base_uri":"https://localhost:8080/","height":248},"outputId":"f6d58aa6-59ed-4602-cdf7-f6ab21a81cb3"},"source":["from sklearn.naive_bayes import BernoulliNB, GaussianNB, MultinomialNB\n","\n","# METTRE VOTRE CODE ICI\n","#\n","#\n","#\n","\n","nerr = (y_predic != y_test.ravel()).sum()\n","\n","print(\"Taux d'erreur NN = {:.1f}%\".format(100*nerr/y_test.shape[0]))\n"],"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-10-b019ce92fff8>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;31m#\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mnerr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0my_predic\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0my_test\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mravel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Taux d'erreur NN = {:.1f}%\"\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m100\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mnerr\u001b[0m\u001b[0;34m/\u001b[0m\u001b[0my_test\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'y_predic' is not defined"]}]},{"cell_type":"markdown","metadata":{"id":"5igyJiha1CRR"},"source":["## Activité 2.2: Plus proche voisin"]},{"cell_type":"markdown","metadata":{"id":"34T2v5Wa1CRU"},"source":["\n","<div class=\"alert alert-block alert-info\">\n","\n","La bibliothèque scikit-learn propose une version de l'algorithme de classification par [k plus proches voisins](http://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html#sklearn.neighbors.KNeighborsClassifier) avec plusieurs paramétrages possibles.\n","\n","<br>\n","Ecrivez la démarche générique d'apprentissage à partir cette bibliothèque, et testez plusieurs paramètres pour améliorer les performances. \n","\n","<br><br>\n","ATTENTION: les calculs peuvent être plus longs que pour les exemples précédents (plusieurs dizaines de secondes). Une possibilité est de limiter la taille de la base de donnée pour sélectionner les bonnes configurations.\n","<br>\n","\n","</div>"]},{"cell_type":"code","metadata":{"id":"zUQI8g-21CRV","outputId":"76ef82ad-8597-4a21-8c8d-4bb46f1fe865"},"source":["from sklearn.neighbors import KNeighborsClassifier\n","import timeit\n","\n","tic = timeit.default_timer();  \n","\n","# METTRE VOTRE CODE ICI\n","#\n","#\n","#\n","#\n","\n","toc = timeit.default_timer()\n","print(\"Temps d'execution = {:.3g} s\".format(toc-tic))\n","\n","nerr = (y_predic != y_test.ravel()).sum()\n","\n","print(\"Taux d'erreur NN = {:.1f}%\".format(100*nerr/y_test.shape[0]))\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Temps d'execution = 3.69e-05 s\n"],"name":"stdout"},{"output_type":"error","ename":"NameError","evalue":"name 'y_predic' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-13-6b88e375a836>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     13\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Temps d'execution = {:.3g} s\"\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtoc\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0mtic\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     14\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 15\u001b[0;31m \u001b[0mnerr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0my_predic\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0my_test\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mravel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     16\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     17\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Taux d'erreur NN = {:.1f}%\"\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m100\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mnerr\u001b[0m\u001b[0;34m/\u001b[0m\u001b[0my_test\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'y_predic' is not defined"]}]}]}